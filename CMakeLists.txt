cmake_minimum_required( VERSION 3.11 FATAL_ERROR )
project(Vectorlike_leptons)
set(CMAKE_BUILD_TYPE Debug)

list(APPEND CMAKE_PREFIX_PATH $ENV{ROOTSYS})
find_package(ROOT 6.14 REQUIRED)
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)

include(CheckIncludeFile)
check_include_file("dirent.h" HAVE_DIRENT LANGUAGE CXX)
if(NOT HAVE_DIRENT)
    message(FATAL_ERROR "dirent.h is not available.")
endif()
check_include_file("errno.h" HAVE_ERRNO LANGUAGE CXX)
if(NOT HAVE_ERRNO)
    message(FATAL_ERROR "errno.h is not available.")
endif()
check_include_file("getopt.h" HAVE_GETOPT LANGUAGE CXX)
if(NOT HAVE_GETOPT)
    message(FATAL_ERROR "getopt.h is not available.")
endif()
check_include_file("sys/types.h" HAVE_SYSTYPES LANGUAGE CXX)
if(NOT HAVE_SYSTYPES)
    message(FATAL_ERROR "sys/types.h is not available.")
endif()
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
include_directories(${PROJECT_SOURCE_DIR}/include)
add_executable(event_loop ${PROJECT_SOURCE_DIR}/src/event_loop.cxx)
target_link_libraries(event_loop PUBLIC ROOT::Tree ROOT::TreePlayer ROOT::Physics Threads::Threads)
add_custom_target(copy-scripts ALL COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/scripts/ ${CMAKE_BINARY_DIR}/bin)
add_custom_target(copy-data ALL COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/vectorlike-leptons-data/ ${CMAKE_BINARY_DIR}/vectorlike-leptons-data)
